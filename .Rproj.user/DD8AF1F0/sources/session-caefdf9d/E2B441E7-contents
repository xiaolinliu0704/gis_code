---
title: "practical 3"
output: html_document
date: "2023-10-18"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
library(fs)
library(raster)
library(terra)
library(tidyverse)
library(sf)
library(sp)
library(ggplot2)
library(here)
rm(sspl)
spain <- sf::st_read(here("data", "gadm41_ESP.gpkg"), 
                      layer='ADM_ADM_0')

layers<-st_layers(here("data","gadm41_ESP.gpkg"))

ssp1<-terra::rast(here("data","wc2.1_2.5m_tmax_ACCESS-CM2_ssp126_2081-2100.tif"))
ssp5<-terra::rast(here("data","wc2.1_2.5m_tmax_ACCESS-CM2_ssp585_2081-2100.tif"))

world_cities<-sf::st_read(here("data","World_Cities","World_Cities.shp"))

```
st_crs(worldoutline)$proj4string
worldoutline <- st_read(here("data", "gadm_410-levels","gadm_410-levels.gpkg"), 
                      layer='ADM_0') %>% 
  st_set_crs(4326)
worldoutlinePROJECTED <- worldoutline %>%
  st_transform(.,4326)

print(worldoutlinePROJECTED)
jan<-terra::rast(here("data", "wc2.1_2.5m_tmax_ACCESS-CM2_ssp585_2081-2100.tif"))
jan
plot(jan)

filter cities

```{r}
spanish_cities<- world_cities %>%
  janitor::clean_names(.)%>%
  dplyr::filter(cntry_name=="Spain")

```

#ssp_diff<-ssp5-ssp1

```{r}

###crop and mask rasters
spain_diff<-ssp1%>%
  terra::crop(.,spain)

exact_spain<- spain_diff%>%
  terra::mask(.,spain)

spain_diff5<-ssp5%>%
  terra::crop(.,spain)

exact_spain5<- spain_diff5%>%
  terra::mask(.,spain)
```


pr1 <- terra::project(jan, "+proj=moll +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs")

#or....

newproj<-"ESRI:54009"
# get the jan raster and give it the new proj4
pr1 <- jan %>%
  terra::project(., newproj)

pr1 <- pr1 %>%
  terra::project(., "EPSG:4326")
plot(pr1)
```
subtract rasters

```{r}

diff_climate_model <- exact_spain5 - exact_spain

```

listfiles <- dir_info("data/") %>%
  filter(str_detect(path, ".tif")) %>%
  dplyr::select(path)%>%
  pull()

#have a look at the file names 
listfiles
```
rename and extract data from points

```{r}

month <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
           "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

names(diff_climate_model) <- month

spain_city_diff<-terra::extract(diff_climate_model,spanish_cities)

```

```{r}

spanish_joint_ID<-spanish_cities%>%
  dplyr::mutate (join_id=1:n())

```

```{r}

spain_city_diff2<-spanish_joint_ID%>%
  dplyr::left_join(.,spain_city_diff,by=c("join_id"="ID"))

city_climate_diff<-spain_city_diff2%>%
  dplyr::select (c(,16:27))%>%
  sf::st_drop_geometry(.)%>%
  dplyr::as_tibble()

tidy_city_diff<-city_climate_diff%>%
  tidyr::pivot_longer(everything(),names_to = "Months",values_to="temp_diff")

facet_plot<-tidy_city_diff%>%
  dplyr::mutate(Months=factor(Months,levels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")))


```


point <- st_read(here("data", "World_Cities.csv"))
plot(worldoutline$geom)
print(worldoutline)
crs(worldclimtemp)
worldtemp <- worldoutline %>%
  # now crop our temp data to the extent
  terra::crop(worldclimtemp,.)
plot(worldtemp)
exactworld<-terra::mask(worldtemp, worldoutline)
hist(exactworld[[3]], col="red", main ="March temperature")
exactworlddf <- exactworld %>%
  as.data.frame()
library(ggplot2)
# set up the basic histogram
gghist <- ggplot(exactworld, 
                 aes(x=Mar)) + 
  geom_histogram(color="black", 
                 fill="white")+
  labs(title="Ggplot2 histogram of World March temperatures", 
       x="Temperature", 
       y="Frequency")
# add a vertical line to the hisogram showing mean tempearture
gghist + geom_vline(aes(xintercept=mean(Mar, 
                                        na.rm=TRUE)),
            color="blue", 
            linetype="dashed", 
            size=1)+
  theme(plot.title = element_text(hjust = 0.5))
```
```{r}

#plot facted histogram

plot<-ggplot(facet_plot,aes(x=temp_diff,na.rm=TRUE))+
  geom_histogram(color="black",binwidth=.1)+
  labs(title="Ggplot2 faceted difference in climate scenarios of world's max temp",
       x="Temperature",
       y="Frequency")+
  facet_grid(Months ~ .)+
  theme(plot.title=element_text(hjust=0.5))

plot
       
```




squishdata<-exactworlddf%>%
  pivot_longer(
  cols = 1:12,
  names_to = "Month",
  values_to = "Temp"
)

twomonths <- squishdata %>%
  # | = OR
  filter(., Month=="Jan" | Month=="Jun")
meantwomonths <- twomonths %>%
  group_by(Month) %>%
  summarise(mean=mean(Temp, na.rm=TRUE))
maxofall <- squishdata %>%
  group_by(Month) %>%
  summarize(max = max(Temp, na.rm=TRUE))

meantwomonths

ggplot(twomonths, aes(x=Temp, color=Month, fill=Month)) +
  geom_histogram(position="identity", alpha=0.5)+
  geom_vline(data=meantwomonths, 
             aes(xintercept=mean, 
                 color=Month),
             linetype="dashed")+
  labs(title="Ggplot2 histogram of world's Jan and Jun
       temperatures",
       x="Temperature",
       y="Frequency")+
  theme_classic()+
  theme(plot.title = element_text(hjust = 0.5))

library(plotly)
# split the data for plotly based on month

jan <- squishdata %>%
  drop_na() %>%
  filter(., Month=="Jan")

jun <- squishdata %>%
  drop_na() %>%
  filter(., Month=="Jun")

# give axis titles
x <- list (title = "Temperature")
y <- list (title = "Frequency")

# set the bin width
xbinsno<-list(start=0, end=40, size = 2.5)

# plot the histogram calling all the variables we just set
ihist<-plot_ly(alpha = 0.6) %>%
        add_histogram(x = jan$Temp,
        xbins=xbinsno, name="January") %>%
        add_histogram(x = jun$Temp,
        xbins=xbinsno, name="June") %>% 
        layout(barmode = "overlay", xaxis=x, yaxis=y)

ihist


